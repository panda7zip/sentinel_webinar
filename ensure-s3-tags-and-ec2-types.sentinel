import "tfplan/v2" as tfplan

s3_buckets = filter tfplan.resource_changes as _, rc {
    rc.type is "aws_s3_bucket" and
    (rc.change.actions contains "create" or rc.change.actions is ["update"])
}

ec2_instances = filter tfplan.resource_changes as _, rc {
    rc.type is "aws_instance" and
    (rc.change.actions contains "create" or rc.change.actions is ["update"])
}

// Rule to ensure all S3 buckets have tags defined.
bucket_tags = rule {
    all s3_buckets as _, bucket {
        (bucket.change.after.tags is not null) and (length(bucket.change.after.tags) > 0) else {
            print("Noncompliant S3 Bucket:", bucket.change.after.bucket)
            false
        }
    }
}

// Rule to ensure all EC2 instances are of type "t3.medium".
ec2_instance_type = rule {
    all ec2_instances as _, instance {
        instance.change.after.instance_type is "t3.medium" else {
            print("Noncompliant EC2 Instance:", instance.change.after.id, "Type:", instance.change.after.instance_type)
            false
        }
    }
}

main = rule {
    bucket_tags and ec2_instance_type
}